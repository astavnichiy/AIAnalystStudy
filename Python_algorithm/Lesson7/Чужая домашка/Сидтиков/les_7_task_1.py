# Vasilii Sitdikov
# GeekBrains Courses. Algorithms
# Lesson 7 task 1
# October 2019

# task: 1. Отсортируйте по убыванию методом пузырька одномерный целочисленный массив, заданный случайными числами на
#       промежутке [-100; 100). Выведите на экран исходный и отсортированный массивы.
#       Примечания:
#       a. алгоритм сортировки должен быть в виде функции, которая принимает на вход массив данных,
#       b. постарайтесь сделать алгоритм умнее, но помните, что у вас должна остаться сортировка пузырьком.
#       Улучшенные версии сортировки, например, расчёской, шейкерная и другие в зачёт не идут.
# ----------------------------------------------------------------------------------------------------------------------
# Solution:
import random


def bubble_init(a):
    # Вариант сортировки пузырьком, предложенный на занятии
    n = 1
    k = 0
    while n < len(a):
        for i in range(len(a) - n):
            k += 1
            if a[i] > a[i + 1]:
                a[i], a[i + 1] = a[i + 1], a[i]
                k += 1
        n += 1
        print(a)
    return k


def bubble_new(a):
    # Есть идея запоминать позиции, в которых перестановки не производились (бинарный массив b).
    # Тогда, во-первых, мы их уже можем не проверять при следующем проходе,
    # а во-вторых, прекратить проверки вообще, если в прошлый проход перестановок не было.
    n = 1
    k = 0
    b = [1] * len(a)
    while n < len(a):
        print(f'b = {b}')
        if sum(b) == 0:  # Если массив b нулевой, значит перестановок не было. Можем выходить.
            return k
        for i in range(len(a) - n):
            k += 1
            if (b[i] or b[i + 1]) and a[i] > a[i + 1]:
                a[i], a[i + 1] = a[i + 1], a[i]
                b[i] = 1
                b[i + 1] = 1
            else:
                b[i] = 0
        b[len(a) - n] = 0
        n += 1
        print(a)
    return k


size = 10
my_array = [random.randint(-100, 100) for i in range(size)]
random.shuffle(my_array)
print(my_array)
print('*' * 50)
print(f'Количество сравнений тривиальным методом: {bubble_init(my_array[:])}')
print('*' * 50)
print(f'Количество сравнений улучшенным методом: {bubble_new(my_array[:])}')
print('*' * 50)
print('Работа с уже отсортированным массивом')
my_array = [x for x in range(10)]
print(my_array)
print('*' * 50)
print(f'Количество сравнений тривиальным методом: {bubble_init(my_array[:])}')
print('*' * 50)
print(f'Количество сравнений улучшенным методом: {bubble_new(my_array[:])}')
print('*' * 50)
