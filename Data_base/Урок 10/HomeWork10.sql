Задания на БД vk:

Проанализировать какие запросы могут выполняться наиболее часто в процессе работы приложения и добавить необходимые индексы.

Ответ: 
1. 
CREATE INDEX users_id_IDX USING BTREE ON vk.users (id);
 -- В первую очередь. Это и понятно. Он используется везде.

2. 
CREATE INDEX users_email_IDX USING BTREE ON vk.users (email);
CREATE INDEX users_phone_IDX USING BTREE ON vk.users (phone);
 -- Эти индексы нужны для быстрого поиска юзера при входе

3. 
CREATE INDEX  vk.idx_messages_from_user_id_to_user_id USING BTREE ON vk.messages (from_user_id, to_user_id) 
 --  


Комментарий 1: Сложно придумать все индексы сразу. Нужно добавлять по мере наполнения данными. Возможно в режиме опытно проссышленной эксплуатации
Комментарий 2: А вообще я разочаровался в обоих IDE (DBeaver и WorkBench). MS SQL Managmet studio умеет преобразовывать уже сформированный индекс в SQL запрос. А эти не умеют. 


Задание на денормализацию
Разобраться как построен и работает следующий запрос:
Список медиафайлов пользователя с количеством лайков

SELECT media.filename,
target_types.name,
COUNT(*) AS total_likes,
CONCAT(first_name, ' ', last_name) AS owner
FROM media
JOIN likes
ON media.id = likes.target_id
JOIN target_types
ON likes.target_type_id = target_types.id
JOIN users
ON users.id = media.user_id
WHERE users.id = 2 AND target_types.id = 1
GROUP BY media.id;
Правильно-ли он построен?
Какие изменения, включая денормализацию, можно внести в структуру БД
чтобы существенно повысить скорость работы этого запроса?

Ответ: 
1. Группировка идет по "media.id", в COUNT(*) нужно подставить COUNT(media.id) 
2. Как вы и говорили, нужно навесить на likes триггер, который будет добавлять инкрементально значение для каждого media.id, который подвергся лайканию. Нужносоздать новое поле integer и туда приплюсовывать значение. 



Задание на оконные функции
Построить запрос, который будет выводить следующие столбцы:
имя группы
среднее количество пользователей в группе
самый молодой пользователь в группе
самый пожилой пользователь в группе
общее количество пользователей в группе
всего пользователей в системе
отношение в процентах (общее количество пользователей в группе / всего пользователей в системе) * 100

Ответ: Не осилил!